{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "existingVNETName": {
            "type": "string",
            "metadata": {
                "description": "Existing VNET that contains the domain controller"
            }
        },
        "existingSubnetName": {
            "type": "string",
            "metadata": {
                "description": "Existing subnet that contains the domain controller"
            }
        },
        "dnsLabelPrefix": {
            "type": "string",
            "metadata": {
                "description": "Virtual machine name for both Azure and AD"
            }
        },
        "vmSize": {
            "defaultValue": "Standard_NV6",
            "type": "string",
            "metadata": {
                "description": "The size of the virtual machines"
            }
        },
        "domainToJoin": {
            "type": "string",
            "metadata": {
                "description": "The FQDN of the AD domain"
            }
        },
        "domainUsername": {
            "type": "string",
            "metadata": {
                "description": "Username of the account on the domain"
            }
        },
        "domainPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Password of the account on the domain"
            }
        },
        "domainJoinOptions": {
            "defaultValue": 3,
            "type": "int",
            "metadata": {
                "description": "Set of bit flags that define the join options. Default value of 3 is a combination of NETSETUP_JOIN_DOMAIN (0x00000001) & NETSETUP_ACCT_CREATE (0x00000002) i.e. will join the domain and create the account on the domain. For more information see https://msdn.microsoft.com/en-us/library/aa392154(v=vs.85).aspx"
            }
        },
        "vmAdminUsername": {
            "type": "string",
            "metadata": {
                "description": "The name of the administrator of the new VM and the domain. Exclusion list: 'admin','administrator"
            }
        },
        "vmAdminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "The password for the administrator account of the new VM and the domain"
            }
        },
        "_artifactsLocation": {
            "type": "string",
            "metadata": {
                "description": "The location of resources, such as templates and DSC modules, that the template depends on"
            }
        },
        "_artifactsLocationSasToken": {
            "type": "securestring",
            "metadata": {
                "description": "Auto-generated token to access _artifactsLocation"
            },
            "defaultValue": ""
        },
        "CAMDeploymentBlobSource": {
            "type": "string",
            "metadata": {
                "description": "The location of the blobs for admin GUI machine installation"
            }
        },
        "registrationCode": {
          "type": "securestring",
          "minLength": 21,
          "metadata": {
            "description": "PCoIP Standard Agent License Registration Code."
          }
        },
        "storageAccountName": {
            "type": "string",
            "metadata": {
                "description": "Storage account to use for VM data and VHD's"
            }
        }
    },
    "variables": {
        "imagePublisher": "MicrosoftWindowsServer",
        "imageOffer": "WindowsServer",
        "windowsOSVersion": "2016-Datacenter",
        "apiVersion": "2015-06-15",
        "nicName": "[concat(parameters('dnsLabelPrefix'),'Nic')]",
        "vnetID": "[resourceId(resourceGroup().name, 'Microsoft.Network/virtualNetworks', parameters('existingVNETName'))]",
        "subnetId": "[concat(variables('vnetID'),'/subnets/', parameters('existingSubnetName'))]",
        "pcoipAgentInstallerUrl": "[concat(parameters('CAMDeploymentBlobSource'),'/PCoIP_agent_release_installer_2.8.0.6123_graphics.exe')]",
        "videoDriverUrl": "[concat(parameters('CAMDeploymentBlobSource'),'/369.95_grid_win10_server2016_64bit_international.exe')]",
        "registrationCode": "[parameters('registrationCode')]"
    },
    "resources": [
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('nicName')]",
            "apiVersion": "[variables('apiVersion')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('subnetId')]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[parameters('dnsLabelPrefix')]",
            "apiVersion": "[variables('apiVersion')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": {
                    "computerName": "[parameters('dnsLabelPrefix')]",
                    "adminUsername": "[parameters('vmAdminUsername')]",
                    "adminPassword": "[parameters('vmAdminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('imagePublisher')]",
                        "offer": "[variables('imageOffer')]",
                        "sku": "[variables('windowsOSVersion')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "osdisk",
                        "vhd": {
                            "uri": "[concat('http://',parameters('storageAccountName'),'.blob.core.windows.net/vhds/',parameters('dnsLabelPrefix'), 'disk0.vhd')]"
                        },
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    },
                    "dataDisks": [
                        {
                            "name": "myvm-data-disk1",
                            "vhd": {
                                "uri": "[concat('http://',parameters('storageAccountName'),'.blob.core.windows.net/vhds/',parameters('dnsLabelPrefix'), 'disk1.vhd')]"
                            },
                            "caching": "None",
                            "createOption": "Empty",
                            "diskSizeGB": "100",
                            "lun": 0
                        }
                    ]
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": "false",
                        "storageUri": "[concat('http://',parameters('storageAccountName'),'.blob.core.windows.net')]"
                    }
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]"
            ]
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(parameters('dnsLabelPrefix'),'/joindomain')]",
            "apiVersion": "[variables('apiVersion')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "publisher": "Microsoft.Compute",
                "type": "JsonADDomainExtension",
                "typeHandlerVersion": "1.3",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "Name": "[parameters('domainToJoin')]",
                    "User": "[concat(parameters('domainToJoin'), '\\', parameters('domainUsername'))]",
                    "Restart": "true",
                    "Options": "[parameters('domainJoinOptions')]"
                },
                "protectedsettings": {
                    "Password": "[parameters('domainPassword')]"
                }
            },
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', parameters('dnsLabelPrefix'))]"
            ]
        },
        {
          "type": "Microsoft.Compute/virtualMachines/extensions",
          "name": "[concat(parameters('dnsLabelPrefix'),'/PCoIPAgentDscExtension')]",
          "apiVersion": "2017-03-30",
          "location": "[resourceGroup().location]",
          "dependsOn": [
              "[resourceId('Microsoft.Compute/virtualMachines/extensions',parameters('dnsLabelPrefix'),'joindomain')]"
          ],
          "properties": {
            "publisher": "Microsoft.Powershell",
            "type": "DSC",
            "typeHandlerVersion": "2.9",
            "autoUpgradeMinorVersion": "true",
            "settings": {
              "configuration": {
                "url": "[concat(parameters('_artifactsLocation'), '/Install-PCoIPAgent.zip')]",
                "script": "Install-PCoIPAgent.ps1",
                "function": "InstallPCoIPAgent"
              },
              "configurationArguments": {
                "pcoipAgentInstallerUrl": "[variables('pcoipAgentInstallerUrl')]",
                "videoDriverUrl": "[variables('videoDriverUrl')]",
                "gitLocation": "[parameters('_artifactsLocation')]",
                "sumoCollectorID": "[concat('CAMPOC-',resourceGroup().name,'-Agent-',subscription().subscriptionId)]"
              },
              "privacy": {
                "DataCollection": "Disable"
              }
            },
            "protectedSettings": {
              "configurationArguments": {
                "registrationCodeCredential": {
                  "userName": "dummyUser",
                  "password": "[variables('registrationCode')]"
                }
              }
            }
          }
        }
    ]
}
